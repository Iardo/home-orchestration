- name: "nvim"
  set_fact:
    state: present

- name: "is binary present?"
  vars:
    subtask: true
    nameskip: true
  register: bin_path
  stat: { path: /opt/nvim }

# Debian
# ------
- when: |
    bin_path.stat.exists == false and
    "present" in state and
    ansible_facts["os_family"] == "Debian"
  block:
    - name: "download"
      become: yes
      vars:
        version: stable
        subtask: true
        nameskip: false
      ansible.builtin.unarchive:
        creates: /opt/nvim-linux64/bin/nvim
        src: "https://github.com/neovim/neovim/releases/download/{{ version }}/nvim-linux64.tar.gz"
        dest: /opt
        remote_src: yes

    - name: "move app"
      become: yes
      vars:
        subtask: true
        nameskip: true
      ansible.builtin.command:
        cmd: "mv /opt/nvim-linux64 /opt/nvim"

    - name: "link app"
      become: yes
      vars:
        subtask: true
        nameskip: false
      ansible.builtin.file:
        state: link
        src: /opt/nvim/bin/nvim
        dest: "/home/{{ ansible_user_id }}/.local/bin/nvim"
        mode: 0775

    - name: "link app"
      become: yes
      vars:
        subtask: true
        nameskip: false
      ansible.builtin.file:
        state: link
        src: /opt/nvim/bin/nvim
        dest: "/usr/local/bin/nvim"
        mode: 0775

- when: |
    bin_path.stat.exists == true and
    'absent' in state and
    ansible_facts["os_family"] == "Debian"
  block:
    - name: "remove app"
      become: yes
      vars:
        subtask: true
        nameskip: false
      ansible.builtin.command:
        cmd: rm -rf "/home/{{ ansible_user_id }}/.local/bin/nvim" {{ bin_path.stat.path }}
        warn: false
